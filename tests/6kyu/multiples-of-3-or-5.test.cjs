const assert = require("assert");
const solution = require("../../solutions/6kyu/multiples-of-3-or-5.cjs");

describe("multiples-of-3-or-5.test.cjs", () => {
    const testCases = {
        "basic tests": [
            { input: [10], expected: 23 },
            { input: [20], expected: 78 },
            { input: [200], expected: 9168 },
        ],
        "smallest cases": [
            { input: [-1], expected: 0 },
            { input: [0], expected: 0 },
            { input: [1], expected: 0 },
            { input: [2], expected: 0 },
            { input: [3], expected: 0 },
            { input: [4], expected: 3 },
            { input: [5], expected: 3 },
            { input: [6], expected: 8 },
        ],
        "random cases": [
            { input: [6921], expected: 11174648 },
            { input: [886], expected: 183195 },
            { input: [-97], expected: 0 },
            { input: [8890], expected: 18439343 },
            { input: [-5], expected: 0 },
            { input: [185], expected: 7833 },
            { input: [4809], expected: 5392814 },
            { input: [16677], expected: 64893543 },
            { input: [-30], expected: 0 },
            { input: [73107], expected: 1247073828 },
            { input: [-16], expected: 0 },
            { input: [-65], expected: 0 },
            { input: [39961], expected: 372607020 },
            { input: [89708], expected: 1877734964 },
            { input: [1821], expected: 773198 },
            { input: [-96], expected: 0 },
            { input: [954], expected: 211694 },
            { input: [7609], expected: 13506483 },
            { input: [9148], expected: 19530675 },
            { input: [3585], expected: 2997060 },
            { input: [-98], expected: 0 },
            { input: [-66], expected: 0 },
            { input: [-93], expected: 0 },
            { input: [-12], expected: 0 },
            { input: [40383], expected: 380480550 },
            { input: [483], expected: 54000 },
            { input: [20330], expected: 96421803 },
            { input: [74249], expected: 1286344125 },
            { input: [44885], expected: 470050683 },
            { input: [29075], expected: 197225418 },
            { input: [106], expected: 2625 },
            { input: [5730], expected: 7658145 },
            { input: [-33], expected: 0 },
            { input: [990], expected: 228195 },
            { input: [90], expected: 1845 },
            { input: [20721], expected: 100177748 },
            { input: [-18], expected: 0 },
            { input: [2872], expected: 1925294 },
            { input: [-56], expected: 0 },
            { input: [-30], expected: 0 },
            { input: [5658], expected: 7464600 },
            { input: [564], expected: 73829 },
            { input: [1846], expected: 795195 },
            { input: [39095], expected: 356598528 },
            { input: [13373], expected: 41725544 },
            { input: [272], expected: 17145 },
            { input: [-52], expected: 0 },
            { input: [305], expected: 21453 },
            { input: [-94], expected: 0 },
            { input: [-2], expected: 0 },
            { input: [16919], expected: 66791700 },
            { input: [271], expected: 17145 },
            { input: [-92], expected: 0 },
            { input: [140], expected: 4458 },
            { input: [-85], expected: 0 },
            { input: [65614], expected: 1004521908 },
            { input: [755], expected: 132378 },
            { input: [47570], expected: 527971503 },
            { input: [-91], expected: 0 },
            { input: [-92], expected: 0 },
            { input: [-94], expected: 0 },
            { input: [97], expected: 2219 },
            { input: [35671], expected: 296899245 },
            { input: [410], expected: 38883 },
            { input: [-100], expected: 0 },
            { input: [5069], expected: 5995275 },
            { input: [290], expected: 19383 },
            { input: [474], expected: 52094 },
            { input: [-93], expected: 0 },
            { input: [-71], expected: 0 },
            { input: [5444], expected: 6915150 },
            { input: [-11], expected: 0 },
            { input: [71315], expected: 1186634058 },
            { input: [-98], expected: 0 },
            { input: [24769], expected: 143141703 },
            { input: [-93], expected: 0 },
            { input: [15001], expected: 52507500 },
            { input: [815], expected: 154308 },
            { input: [-95], expected: 0 },
            { input: [84727], expected: 1675041494 },
            { input: [5573], expected: 7245644 },
            { input: [-50], expected: 0 },
            { input: [-14], expected: 0 },
            { input: [322], expected: 24269 },
            { input: [-95], expected: 0 },
            { input: [-91], expected: 0 },
            { input: [678], expected: 106650 },
            { input: [-23], expected: 0 },
            { input: [127], expected: 3794 },
            { input: [-99], expected: 0 },
            { input: [8385], expected: 16401060 },
            { input: [-94], expected: 0 },
            { input: [3021], expected: 2128598 },
            { input: [2446], expected: 1396095 },
            { input: [39857], expected: 370651500 },
            { input: [26], expected: 168 },
            { input: [84170], expected: 1653000603 },
            { input: [-92], expected: 0 },
            { input: [1513], expected: 534795 },
            { input: [5842], expected: 7964789 },
        ],
    };

    Object.entries(testCases).forEach(([title, cases]) => {
        it(title, () => {
            cases.forEach(({ input, expected }) => {
                assert.strictEqual(solution(...input), expected);
            });
        });
    });
});
